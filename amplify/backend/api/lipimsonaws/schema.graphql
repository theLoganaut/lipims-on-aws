# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public, provider: apiKey }
} # FOR TESTING ONLY!
type Location @model(timestamps: { createdAt: "openTime", updatedAt: "lastestUpdateTime"}) {
  id: ID
  city: String @index(name: "byCity", queryField: "locationByCityName")
  region: String
  image: String
  address: String
  employeeList: [Employee] @hasMany
}
type Employee @model(timestamps: { createdAt: "hireTime", updatedAt: "updatedTime"}) {
  id: ID
  fullName: String @index(name: "byEmployeeNameAndPay", queryField: "employeeByNamePayAndHelped" sortKeyFields: ["pay", "recentlyHelped"]) 
  title: String
  pay: String
  recentlyHelped: Int 
  workingAt: Location @belongsTo
  transactions: [Transactions] @hasMany
}
type Customer @model(timestamps: { createdAt: "joinTime", updatedAt: "latestUpdateTime"}) {
  id: ID 
  fullName: String @index(name: "customerName", queryField: "customerName" sortKeyFields:["id"])
  membership: Boolean
  outstandingPayments: Boolean
	allTransactions: [Transactions] @hasMany
  storedItems: [Item] @hasMany
}
type Item @model(timestamps: null) {
  id: ID
  itemName: String @index(name: "byItemName", queryField: "itemByNameAndOwner") 
  quickTransfer: Boolean
  owner: Customer @belongsTo
	transactions: Transactions @hasOne
}
type Transactions @model(timestamps: null) {
	id: ID
	itemID: String @index(name: "itemId", queryField: "transactionByItemId", sortKeyFields: ["customerName"])
  employeeId: String @index(name: "employeeId", queryField: "transactionByEmployeeId")
  locationId: String @index(name: "locationId", queryField: "transactionByLocationId")
  customerName: String @index(name: "transactionCustomerName", queryField: "transactionByCustomerName")
  customerData: Customer @belongsTo 
	isStored: String @index(name: "isStoredAndTime", queryField: "transactionByIsStoredAndTime", sortKeyFields: ["dateTime"])
  dateTime: String
}