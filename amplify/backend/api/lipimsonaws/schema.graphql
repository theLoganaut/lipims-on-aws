# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public, provider: apiKey }
} # FOR TESTING ONLY!
type Location @model(timestamps: { createdAt: "openTime", updatedAt: "lastestUpdateTime"}) {
  id: ID 
  city: String @index(name: "byCity")
  region: String
  image: String
  address: String
  employeeList: [String]
  employeeConnection: [Employee] @hasMany(indexName: "byEmployeeNameAndPay", fields: ["employeeList"])
}
type Employee @model(timestamps: { createdAt: "hireTime", updatedAt: "updatedTime"}) {
  id: ID 
  fullName: String @index(name: "byEmployeeNameAndPay", sortKeyFields: "pay")
  title: String
  pay: String
  workingAt: ID
  employeeConnection: Location @belongsTo(fields: "workingAt")
}
type Customer @model(timestamps: { createdAt: "joinTime", updatedAt: "latestUpdateTime"}) {
  id: ID 
  fullName: String @index(name:"customerName", sortKeyFields: "id")
  membership: Boolean
  outstandingPayments: Boolean 
  storedItems: [String]
  itemConnection: [Item] @hasMany(indexName: "byItemName", fields: ["storedItems"])
}
type Item @model(timestamps: { createdAt: "deposited", updatedAt: "withdrawn"}) {
  id: ID 
  itemName: String @index(name: "byItemName")
  quickTransfer: Boolean
  owner: ID
  customerConnection: Customer @belongsTo(fields: "owner")
  depositLocation: String
  withdrawnLocation: String
  helpedBy: [String]
  employeeConnection: [Employee] @hasMany(indexName: "byEmployeeNameAndPay", fields: ["helpedBy"])
}
type Payments @model(timestamps: {createdAt: "paymentStartDate", updatedAt: "paidDate"}) {
  id: ID 
  amount: Int
  itemID: Item @hasOne
  customerID: Customer @hasOne
  outstanding: Int @index(name: "byOutstanding")
}