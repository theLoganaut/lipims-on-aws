# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public, provider: apiKey }
} # FOR TESTING ONLY!
type Location @model {
  id: ID @index(name: "byCity", sortKeyFields: ["city"], queryField: "byCity")
  city: String! 
  region: String
  image: String
  address: String
  employeeList: [ID]
  employees: [Employee] @hasMany(indexName: "employeeName", fields: "employeeList")
}
type Employee @model(timestamps: { createdAt: "hireTime", updatedAt: "updatedTime"}) {
  id: ID @index(name: "employeeName", sortKeyFields: ["fullName"] queryField: "byEmployeeName")
  fullName: String! 
  title: String
  pay: String
  cityLocation: ID!
  location: Location @belongsTo(fields: ["cityLocation"])
}
type Customer @model(timestamps: { createdAt: "startTime", updatedAt: "latestUpdateTime"}) {
  id: ID @index(name: "customerName", sortKeyFields:["fullName"] queryField: "byCustomerName")
  fullName: String! 
  membership: Boolean
  outstandingPayments: Boolean
  storedItems: [ID] 
  item: [Item] @hasMany(indexName: "byItemName", fields: "storedItems")
}
type Item @model(timestamps: null) {
  id: ID @index(name: "byItemName", sortKeyFields: ["itemName", "owner"] queryField: "byItemName")
  itemName: String! 
  quickTransfer: Boolean
  owner: ID! 
  customer: Customer @belongsTo(fields: "owner")
  storageData: ID
  holdingData: HoldingData @hasOne(fields: ["storageData"])
}
type HoldingData @model(timestamps: { createdAt: "deposited", updatedAt: "withdrawn"}) {
  id: ID!
  city: ID!
  helpedByEmployee: ID
  location: Location @hasOne(fields: ["city"])
  employee: Employee @hasOne(fields: ["helpedByEmployee"])
}
